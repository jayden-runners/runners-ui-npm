{"version":3,"sources":["../stories/button.tsx","../app/lib/utils.ts","../stories/card.tsx"],"sourcesContent":["import { VariantProps, cva } from \"class-variance-authority\"\nimport React, { PropsWithChildren } from \"react\"\nimport { cn } from \"@/app/lib/utils\"\n\nconst buttonVariants = cva(\n  \"rounded-1 px-2.5 font-bold transition-colors duration-200 ease-in-out disabled:cursor-not-allowed\",\n  {\n    variants: {\n      color: {\n        gray: \"bg-gray-100 text-[#555] disabled:bg-gray-400\",\n        dark: \"bg-[#555] text-white disabled:bg-gray-400\",\n        primary: \"bg-primary text-white disabled:bg-gray-400\",\n      },\n      outlineColor: {\n        gray: \"border border-gray-500 bg-white text-gray-500 disabled:border-gray-400 disabled:text-gray-400\",\n        dark: \"border border-gray-500 bg-white text-gray-500 disabled:border-gray-400 disabled:text-gray-400\",\n        primary:\n          \"border border-primary bg-white text-primary disabled:border-gray-400 disabled:text-gray-400\",\n      },\n      size: {\n        \"56\": \"h-[56px] py-4 text-16\",\n        \"48\": \"h-12 py-[14px] text-14\",\n        \"40\": \"h-10 py-2.5 text-14\",\n        \"36\": \"h-9 py-2 text-14\",\n        \"32\": \"h-8 py-1.5 text-14\",\n        \"30\": \"h-[30px] py-1.5 text-12\",\n      },\n    },\n  },\n)\n\ntype ButtonPropsBase = Omit<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  \"color\"\n>\n\nexport interface ButtonProps\n  extends ButtonPropsBase,\n    VariantProps<typeof buttonVariants>,\n    PropsWithChildren {\n  outline?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      children,\n      size = \"40\",\n      color = \"primary\",\n      outline = false,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <button\n        ref={ref}\n        className={cn(\n          buttonVariants({\n            size,\n            ...(outline ? { outlineColor: color } : { color }),\n          }),\n          className,\n        )}\n        {...props}\n      >\n        {children}\n      </button>\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport default Button\n","import { type ClassValue, clsx } from \"clsx\"\nimport { extendTailwindMerge } from \"tailwind-merge\"\n\nconst twMerge = extendTailwindMerge({\n  extend: {\n    classGroups: {\n      \"font-size\": [{ text: [\"12\", \"14\", \"16\", \"18\", \"20\", \"24\", \"28\", \"34\"] }],\n    },\n  },\n})\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import React, { PropsWithChildren } from \"react\"\n\ninterface CardProps extends PropsWithChildren {}\n\nconst Card = (props: CardProps) => {\n  const { children } = props\n  return (\n    <div className=\"mx-auto w-full max-w-[670px] rounded-4 border border-gray-300 bg-white p-14\">\n      {children}\n    </div>\n  )\n}\n\nexport default Card\n"],"mappings":"AAAA,OAAuB,OAAAA,MAAW,2BAClC,OAAOC,MAAkC,QCDzC,OAA0B,QAAAC,MAAY,OACtC,OAAS,uBAAAC,MAA2B,iBAEpC,IAAMC,EAAUD,EAAoB,CAClC,OAAQ,CACN,YAAa,CACX,YAAa,CAAC,CAAE,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,CAAE,CAAC,CAC1E,CACF,CACF,CAAC,EAEM,SAASE,KAAMC,EAAsB,CAC1C,OAAOF,EAAQF,EAAKI,CAAM,CAAC,CAC7B,CDTA,IAAMC,EAAiBC,EACrB,oGACA,CACE,SAAU,CACR,MAAO,CACL,KAAM,+CACN,KAAM,4CACN,QAAS,4CACX,EACA,aAAc,CACZ,KAAM,gGACN,KAAM,gGACN,QACE,6FACJ,EACA,KAAM,CACJ,GAAM,wBACN,GAAM,yBACN,GAAM,sBACN,GAAM,mBACN,GAAM,qBACN,GAAM,yBACR,CACF,CACF,CACF,EAcMC,EAASC,EAAM,WACnB,CACE,CACE,SAAAC,EACA,KAAAC,EAAO,KACP,MAAAC,EAAQ,UACR,QAAAC,EAAU,GACV,UAAAC,EACA,GAAGC,CACL,EACAC,IAGEP,EAAA,cAAC,UACC,IAAKO,EACL,UAAWC,EACTX,EAAe,CACb,KAAAK,EACA,GAAIE,EAAU,CAAE,aAAcD,CAAM,EAAI,CAAE,MAAAA,CAAM,CAClD,CAAC,EACDE,CACF,EACC,GAAGC,GAEHL,CACH,CAGN,EACAF,EAAO,YAAc,SAErB,IAAOU,EAAQV,EE1Ef,OAAOW,MAAkC,QAIzC,IAAMC,EAAQC,GAAqB,CACjC,GAAM,CAAE,SAAAC,CAAS,EAAID,EACrB,OACEF,EAAA,cAAC,OAAI,UAAU,+EACZG,CACH,CAEJ,EAEOC,EAAQH","names":["cva","React","clsx","extendTailwindMerge","twMerge","cn","inputs","buttonVariants","cva","Button","React","children","size","color","outline","className","props","ref","cn","button_default","React","Card","props","children","card_default"]}