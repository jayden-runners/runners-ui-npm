name: Tag Versioning

on:
  push:
    branches:
      - main

jobs:
  tag-versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.4.0
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.15.0'
          cache: 'pnpm'

      - name: Get and bump version
        id: get_and_bump_version
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));

            // 현재 버전을 가져옵니다.
            const currentVersion = packageJson.version;
            console.log(`Current version: ${currentVersion}`);

            const [major, minor, patch] = currentVersion.split('.').map(Number);

            const newPatch = patch + 1;
            const newVersion = `${major}.${minor}.${newPatch}`;
            console.log(`New version: ${newVersion}`);

            packageJson.version = newVersion;
            fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));

            return { currentVersion, newVersion };
          outputs: currentVersion, newVersion

      - name: Create a new commit with the bumped version
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            const newVersion = core.getInput('newVersion');

            execSync('git config --global user.name "github-actions[bot]"');
            execSync('git config --global user.email "github-actions[bot]@users.noreply.github.com"');
            execSync(`git commit -am "versioning to ${newVersion}"`);
            execSync('git push origin main');

      - name: Create a new tag
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            const newVersion = core.getInput('newVersion');

            execSync(`git tag "v${newVersion}"`);
            execSync(`git push origin "v${newVersion}"`);
